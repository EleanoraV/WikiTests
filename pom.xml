<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.example</groupId>
  <artifactId>Wikipedia</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>Archetype - Wikipedia</name>
  <url>http://maven.apache.org</url>

  <properties>
    <maven.compiler.source>15</maven.compiler.source>
    <maven.compiler.target>15</maven.compiler.target>



    <cucumber.version>5.5.0</cucumber.version>
    <junit.version>4.13</junit.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

  </properties>


  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>

      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.0</version>
        <configuration>
          <parallel>methods</parallel>
          <useUnlimitedThreads>true</useUnlimitedThreads>
          <testFailureIgnore>true</testFailureIgnore>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.masterthought</groupId>
        <artifactId>maven-cucumber-reporting</artifactId>
        <version>4.11.2</version>
        <executions>
          <execution>
            <id>execution</id>
            <phase>verify</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <projectName>cucumber-jvm-example</projectName>
              <!-- optional, per documentation set this to "true" to bypass generation
                  of Cucumber Reports entirely, defaults to false if not specified -->
              <skip>false</skip>
              <!-- output directory for the generated report -->
              <outputDirectory>${project.build.directory}</outputDirectory>
              <!-- optional, defaults to outputDirectory if not specified -->
              <inputDirectory>${project.build.directory}</inputDirectory>
              <jsonFiles>
                <!-- supports wildcard or name pattern -->
                <param>**/*.json</param>
              </jsonFiles>
              <!-- optional, defaults to outputDirectory if not specified -->
              <classificationDirectory>${project.build.directory}</classificationDirectory>
              <classificationFiles>
                <!-- supports wildcard or name pattern -->
                <param>sample.properties</param>
                <param>other.properties</param>
              </classificationFiles>

              <!-- optional, set true to fail build on test failures -->
              <checkBuildResult>false</checkBuildResult>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- PLUGIN FOR PARALLEL CUCUMBER -->
      <plugin>
        <groupId>com.github.temyers</groupId>
        <artifactId>cucumber-jvm-parallel-plugin</artifactId>
        <version>2.1.0</version>
        <executions>
          <execution>
            <id>generateRunners</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>generateRunners</goal>
            </goals>
            <configuration>
              <!-- Mandatory -->
              <!-- comma separated list of package names to scan for glue code -->
              <glue>foo, bar</glue>
              <outputDirectory>${project.build.directory}/generated-test-sources/cucumber</outputDirectory>
              <!-- The directory, which must be in the root of the runtime classpath, containing your feature files.  -->
              <featuresDirectory>src/test/resources/features/</featuresDirectory>
              <!-- Directory where the cucumber report files shall be written  -->
              <cucumberOutputDir>target/cucumber-parallel</cucumberOutputDir>
              <!-- comma separated list of output formats json,html,rerun.txt -->
              <format>json</format>
              <!-- CucumberOptions.strict property -->
              <strict>true</strict>
              <!-- CucumberOptions.monochrome property -->
              <monochrome>true</monochrome>
              <!-- The tags to run, maps to CucumberOptions.tags property you can pass ANDed tags like "@tag1","@tag2" and ORed tags like "@tag1,@tag2,@tag3" -->
              <tags></tags>
              <!-- If set to true, only feature files containing the required tags shall be generated. -->
              <filterFeaturesByTags>false</filterFeaturesByTags>
              <!-- Generate TestNG runners instead of default JUnit ones. -->
              <useTestNG>false</useTestNG>
              <!-- The naming scheme to use for the generated test classes.  One of 'simple' or 'feature-title' -->
              <namingScheme>simple</namingScheme>
              <!-- The class naming pattern to use.  Only required/used if naming scheme is 'pattern'.-->
              <namingPattern>Parallel{c}IT</namingPattern>
              <!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per scenario.  FEATURE generates a runner per feature. -->
              <parallelScheme>SCENARIO</parallelScheme>
              <!-- This is optional, required only if you want to specify a custom template for the generated sources (this is a relative path) -->
              <customVmTemplate>src/test/resources/cucumber-custom-runner.vm</customVmTemplate>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- ALSO FOR PARALLEL CUCUMBER TESTING -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19</version>
        <configuration>
          <forkCount>5</forkCount>
          <reuseForks>true</reuseForks>
          <includes>
            <include>**/*IT.class</include>
          </includes>
        </configuration>
      </plugin>






    </plugins>


  </build>









  <dependencies>

    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>7.6.1</version>
      <scope>test</scope>
    </dependency>


    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-junit -->
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-java -->
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-java</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>4.4.0</version>
    </dependency>



    <!-- NOVÃ‰ -->
    <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-picocontainer -->
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-picocontainer</artifactId>
      <version>7.2.3</version>
      <scope>test</scope>
    </dependency>



    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <version>3.0.0-M7</version>

    </dependency>

    <dependency>
      <groupId>net.masterthought</groupId>
      <artifactId>cucumber-reporting</artifactId>
      <version>5.7.2</version>
    </dependency>



    <!-- https://mvnrepository.com/artifact/ru.yandex.qatools.ashot/ashot -->
    <dependency>
      <groupId>ru.yandex.qatools.ashot</groupId>
      <artifactId>ashot</artifactId>
      <version>1.5.4</version>
    </dependency>
  </dependencies>




</project>
